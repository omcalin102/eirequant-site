---
export const prerender = true;
import BaseLayout from "../layouts/BaseLayout.astro";
const title = "EireQuant";
const description = "A next-generation quantitative research platform — blending model families, portfolios, and real-time pipelines into one open showcase.";
---
<BaseLayout {title} {description}>
  <!-- LEFT RAIL: split bubble (Headlines + Recent Blog) -->
  <Fragment slot="left">
    <section class="card">
      <h3 class="card-title">Today · <span id="lr-date">—</span></h3>
      <div class="split">
        <div>
          <div class="subhead">Headlines</div>
          <ul id="news-list" class="list"></ul>
          <div id="news-empty" class="muted" hidden>No headlines.</div>
        </div>
        <div>
          <div class="subhead">Recent Blog</div>
          <ul class="list" id="recent-blog">
            <!-- If you don’t have a blog feed yet, keep a simple link -->
            <li><a href="/blog/">See all posts →</a></li>
          </ul>
        </div>
      </div>
    </section>
  </Fragment>

  <!-- CENTER: Intro hero + Today widgets -->
  <section class="hero card">
    <h1 class="hero-title">EireQuant</h1>
    <p class="hero-sub">
      A next-generation quantitative research platform — blending model families,
      portfolios, and real-time pipelines into one open showcase.
    </p>
    <div class="hero-actions">
      <a class="btn btn-primary" href="/models/">Explore Models</a>
      <a class="btn" href="/blog/">Read Blog</a>
    </div>
  </section>

  <section class="card">
    <h2 class="card-title">Today · <span id="today-date">—</span></h2>

    <div class="grid3">
      <!-- Model Picks -->
      <div class="panel">
        <h3>Model Picks</h3>
        <table class="table" id="picks-table">
          <thead><tr><th>Ticker</th><th>Action</th><th>Conf.</th></tr></thead>
          <tbody></tbody>
        </table>
        <div id="picks-empty" class="muted" hidden>No selections.</div>
      </div>

      <!-- Portfolio Greeks -->
      <div class="panel">
        <h3>Portfolio Greeks</h3>
        <div class="stats" id="greeks-stats">
          <div class="stat"><div class="k">Δ</div><div class="v" id="delta">—</div></div>
          <div class="stat"><div class="k">Γ</div><div class="v" id="gamma">—</div></div>
          <div class="stat"><div class="k">ν</div><div class="v" id="vega">—</div></div>
        </div>
      </div>

      <!-- Sector Heat -->
      <div class="panel">
        <h3>Sector Heat</h3>
        <ul class="heat" id="sector-heat"></ul>
        <div id="sector-empty" class="muted" hidden>No sector data.</div>
      </div>
    </div>
  </section>

  <!-- RIGHT RAIL: digestibles -->
  <Fragment slot="right">
    <section class="card">
      <h3 class="card-title">Top Tickers</h3>
      <ol class="list" id="leaderboard"></ol>
      <div id="leaders-empty" class="muted" hidden>No leaders.</div>
    </section>

    <section class="card">
      <h3 class="card-title">Top Drivers</h3>
      <ul class="list" id="drivers"></ul>
      <div id="drivers-empty" class="muted" hidden>No drivers.</div>
    </section>

    <section class="card">
      <h3 class="card-title">Spotlight Sector</h3>
      <div id="spotlight" class="muted">—</div>
    </section>

    <section class="card">
      <h3 class="card-title">Go Deeper</h3>
      <ul class="list">
        <li><a href="/pipelines/live/">Live Pipeline →</a></li>
        <li><a href="/models/eqx-m1/">EQX-M1 Model Card →</a></li>
        <li><a href="/compare/">Compare Benchmarks &amp; Models →</a></li>
      </ul>
    </section>
  </Fragment>
</BaseLayout>

<style>
  /* Cards + early-2000s-ish feel */
  .card{ border:2px solid #d7d7d7; padding:16px; background:#fff; border-radius:6px; }
  .card + .card{ margin-top:16px; }
  .card-title{ margin:0 0 8px 0; font-family: Georgia, 'Times New Roman', serif; }

  /* Hero */
  .hero-title{ font-family: Georgia, 'Times New Roman', serif; font-size: 40px; margin: 0; }
  .hero-sub{ margin:8px 0 16px 0; color:#444; }
  .hero-actions{ display:flex; gap:10px; }
  .btn{ display:inline-block; padding:10px 14px; border:1px solid #1b1b1b; text-decoration:none; }
  .btn-primary{ background:#1b1b1b; color:#fff; }

  /* Three panels grid */
  .grid3{ display:grid; grid-template-columns: repeat(3, 1fr); gap:16px; }
  @media (max-width: 1100px){ .grid3{ grid-template-columns:1fr; } }

  /* Tables + lists */
  .panel h3{ margin:0 0 8px 0; font-size:18px; }
  .table{ width:100%; border-collapse:collapse; font-size:16px; }
  .table th, .table td{ padding:6px 8px; border-bottom:1px solid #eee; }
  .table th{ text-align:left; font-weight:600; }
  .muted{ color:#6b6b6b; font-size:14px; }

  .stats{ display:flex; gap:12px; }
  .stat{ flex:1; border:1px solid #d7d7d7; padding:10px; text-align:center; }
  .stat .k{ font-weight:700; font-family: Georgia, 'Times New Roman', serif; }
  .stat .v{ font-size:18px; }

  .heat{ list-style:none; padding:0; margin:0; display:flex; flex-direction:column; gap:6px; }
  .heat li{ border-left:8px solid #ccc; padding-left:8px; display:flex; justify-content:space-between; }
  .list{ list-style:none; padding:0; margin:0; display:flex; flex-direction:column; gap:6px; }

  /* Left-rail split card */
  .split{ display:grid; grid-template-columns: 1fr; gap:10px; }
  .subhead{ font-size:13px; color:#333; margin-bottom:6px; text-transform:uppercase; letter-spacing:.02em; }
</style>

<!-- Client script: fetch JSONs from /public/data and populate -->
<script type="module">
  const $ = (sel) => document.querySelector(sel);
  const fmtPct = (x) => (x === null || x === undefined) ? "—" : (Math.round(x*1000)/10).toFixed(1) + "%";
  const leftColor = (score) => {
    if (score >= 0.5) return "#3b7f3b";
    if (score >= 0.1) return "#93b593";
    if (score <= -0.5) return "#a33a3a";
    if (score <= -0.1) return "#d7a1a1";
    return "#cfcfcf";
  };
  async function safeJson(path){
    try { const r = await fetch(path); if (!r.ok) return null; return await r.json(); }
    catch { return null; }
  }

  (async () => {
    // Resolve current date
    const latest = await safeJson("/data/daily/latest.json");
    const date = latest?.date ?? "";
    $("#today-date").textContent = date || "—";
    $("#lr-date").textContent = date || "—";

    // Headlines (first 3)
    const news = date ? await safeJson(`/data/news/${date}.json`) : null;
    const newsList = $("#news-list");
    if (news?.items?.length){
      news.items.slice(0,3).forEach(n => {
        const li = document.createElement("li");
        const a = document.createElement("a");
        a.href = n.url || "/blog/";
        a.textContent = n.title || "Headline";
        li.appendChild(a);
        newsList.appendChild(li);
      });
    } else {
      $("#news-empty")?.removeAttribute("hidden");
    }

    // Recent blog (placeholder – replace when you wire a feed)
    const blogList = $("#recent-blog");
    ["Monthly Review", "Pipeline Notes", "Model Update"].forEach((t,i) => {
      const li = document.createElement("li");
      const a = document.createElement("a");
      a.href = "/blog/";
      a.textContent = t;
      li.appendChild(a);
      if (i === 0 && blogList.firstElementChild?.textContent?.includes("See all posts")) {
        blogList.prepend(li);
      } else {
        blogList.appendChild(li);
      }
    });

    if (date){
      const base = `/data/daily/${date}`;

      // Model selections (top 8)
      const picks = await safeJson(`${base}/model_selection.json`);
      const tbody = document.querySelector("#picks-table tbody");
      if (picks?.items?.length){
        picks.items.slice(0,8).forEach(row => {
          const tr = document.createElement("tr");
          tr.innerHTML = `<td>${row.ticker ?? "-"}</td>
                          <td>${row.action ?? "-"}</td>
                          <td>${row.confidence != null ? fmtPct(row.confidence) : "—"}</td>`;
          tbody.appendChild(tr);
        });
      } else {
        $("#picks-empty")?.removeAttribute("hidden");
      }

      // Greeks
      const greeks = await safeJson(`${base}/risk_greeks.json`);
      if (greeks){
        $("#delta").textContent = greeks.delta != null ? fmtPct(greeks.delta) : "—";
        $("#gamma").textContent = greeks.gamma != null ? fmtPct(greeks.gamma) : "—";
        $("#vega").textContent  = greeks.vega  != null ? fmtPct(greeks.vega)  : "—";
      }

      // Sector heat
      const sectors = await safeJson(`${base}/sector_health.json`);
      const heat = $("#sector-heat");
      if (sectors?.items?.length){
        sectors.items.forEach(s => {
          const li = document.createElement("li");
          li.style.borderLeftColor = leftColor(s.score ?? 0);
          li.innerHTML = `<span>${s.sector ?? "—"}</span><span>${(s.score ?? 0).toFixed(2)}</span>`;
          heat.appendChild(li);
        });
      } else {
        $("#sector-empty")?.removeAttribute("hidden");
      }
    }

    // Right rail — model digestibles
    const leaders = await safeJson("/data/models/eqx-m1/ticker_leaderboard.json");
    const lb = $("#leaderboard");
    if (leaders?.items?.length){
      leaders.items.slice(0,5).forEach((t,i) => {
        const li = document.createElement("li");
        li.innerHTML = `<strong>${i+1}.</strong> ${t.ticker ?? "-"} <span class="muted">(${fmtPct(t.score ?? t.confidence ?? 0)})</span>`;
        lb.appendChild(li);
      });
    } else {
      $("#leaders-empty")?.removeAttribute("hidden");
    }

    const drivers = await safeJson("/data/models/eqx-m1/top_drivers.json");
    const drv = $("#drivers");
    if (drivers?.items?.length){
      drivers.items.slice(0,6).forEach(d => {
        const li = document.createElement("li");
        li.textContent = (d.sign ? (d.sign > 0 ? "▲ " : "▼ ") : "") + (d.name || d.driver || "feature");
        drv.appendChild(li);
      });
    } else {
      $("#drivers-empty")?.removeAttribute("hidden");
    }

    const spotlight = await safeJson("/data/models/eqx-m1/sector_of_month.json");
    if (spotlight){
      $("#spotlight").textContent = `${spotlight.sector ?? "—"} — ${(spotlight.note || spotlight.summary || "").trim()}`;
    }
  })();
</script>
