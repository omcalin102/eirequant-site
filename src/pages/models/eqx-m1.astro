---
import BaseLayout from "../../layouts/BaseLayout.astro";
import PerformanceViewer from "../../components/viewers/PerformanceViewer.tsx";
import PolicyTrace from "../../components/charts/PolicyTrace.tsx";

/**
 * Hard-coded snapshot values pulled from the model card / whitepaper.
 * These ensure the page is fully populated even if client-side fetches are blocked.
 * Sources:
 * - model_card_eqx_m1.json (sectors, PID ranges, regime table)
 * - whitepaper EQX–M1 section (headline metrics)
 */

// Headline (post-costs), 2000-01-03 — 2025-09-19
const HEADLINE = {
  cagr: 0.0710,            // 7.10%
  vol: 0.1454,             // 14.54%
  sortino: 0.670,
  omega: 1.123,
  maxDD: -0.351,           // -35.1%
  recoveryDays: 107,
  pausePct: 0.0785,        // 7.85%
  env: "dev",
  version: "v1.0.0-eqx-m1",
  window: { start: "2000-01-03", end: "2025-09-19" }
};

// PID guardrails (observed ranges)
const PID = {
  riskOffDays: 55,
  threshold: { min: 0.576, med: 0.599, max: 0.629 },
  maxGross:  { min: 0.200, med: 0.598, max: 0.702 }
};

// By-regime performance (days, hit-rate, omega, sortino)
const REGIME = [
  { name: "Bull",    days: 1467, hit: 0.4806, omega: 3.3810, sortino: 7.7425 },
  { name: "Neutral", days:  790, hit: 0.4468, omega: 1.2765, sortino: 1.6744 },
  { name: "Bear",    days: 1118, hit: 0.1959, omega: 0.2722, sortino: -6.1964 },
];

// Sector texture (Ω ≈ odds-like; higher is better). Picked top/worst by Ω.
const SECTORS_TOP = [
  { sector: "Basic Materials",  omega: 1.0607 },
  { sector: "Energy",           omega: 1.0271 },
  { sector: "Consumer Cyclical",omega: 1.0038 },
];
const SECTORS_BOTTOM = [
  { sector: "Utilities",        omega: 0.8194 },
  { sector: "Technology",       omega: 0.8691 },
  { sector: "Real Estate",      omega: 0.8774 },
];

// Consistency / streaks (portfolio & top ticker)
const CONSISTENCY = {
  portfolioMaxWin: 138,
  portfolioMaxLoss: 121,
  topTickerWin: { ticker: "VTR", days: 35 }
};

// Utility formatters
const pct  = (x, d=1)=> `${(x*100).toFixed(d)}%`;
const num  = (x, d=2)=> (x==null||!isFinite(+x)) ? "—" : (+x).toFixed(d);
const dash = (v)=> v==null ? "—" : String(v);
---

<BaseLayout title="EQX-M1 · Model Card" description="EQX-M1 model card with performance, regimes, sectors, and policy controls.">
  <h1>EQX-M1 — Model Card</h1>

  <p class="intro">
    EQX-M1 is an Experimental-series research mark built to test a lightweight, regime-aware equity policy.
    It blends price action with flow and simple macro proxies, decouples decisions by regime, and keeps risk honest
    via tight calibration and a “pause-o-meter” that can down-shift when signal quality degrades.
  </p>

  <!-- Meta row -->
  <section class="panel meta">
    <div class="row">
      <div><div class="k">Version</div><div class="v">{HEADLINE.version}</div></div>
      <div><div class="k">Data</div><div class="v">{HEADLINE.window.start} — {HEADLINE.window.end}</div></div>
      <div><div class="k">Objective</div><div class="v">Book</div></div>
      <div><div class="k">Env</div><div class="v">{HEADLINE.env}</div></div>
    </div>
  </section>

  <!-- Key metrics -->
  <section class="panel">
    <h2 class="h">Key Metrics</h2>
    <div class="metrics">
      <div class="m"><div class="label">CAGR</div><div class="val">{pct(HEADLINE.cagr,1)}</div><div class="subl">MAR ≈ {num(HEADLINE.cagr/Math.abs(HEADLINE.maxDD),3)}</div></div>
      <div class="m"><div class="label">Vol (ann.)</div><div class="val">{pct(HEADLINE.vol,1)}</div><div class="subl">Sortino {num(HEADLINE.sortino,2)}</div></div>
      <div class="m"><div class="label">Omega</div><div class="val">{num(HEADLINE.omega,3)}</div><div class="subl">Odds-like ratio</div></div>
      <div class="m"><div class="label">Max DD</div><div class="val">{pct(HEADLINE.maxDD,1)}</div><div class="subl">Recovery {HEADLINE.recoveryDays} d</div></div>
      <div class="m"><div class="label">Current Regime</div><div id="current-reg" class="val">—</div><div id="current-reg-sub" class="subl">prob —</div></div>
    </div>
  </section>

  <!-- Mosaic -->
  <div class="mosaic">
    <!-- Equity (large) -->
    <section class="panel wide">
      <div class="head"><h2 class="h">Performance Viewer</h2></div>
      <PerformanceViewer client:load />
      <p class="note">
        Series normalised to start = 1.0; includes costs. Equities: model, SPX, PID-governed book.
      </p>
    </section>

    <!-- PID trace + summary -->
    <section class="panel">
      <h2 class="h">Policy Control Trace</h2>
      <PolicyTrace client:load />
      <ul class="kv">
        <li><span>Risk-off days</span><b>{PID.riskOffDays}</b></li>
        <li><span>Pause share</span><b>{pct(HEADLINE.pausePct,1)}</b></li>
        <li><span>Threshold</span><b>{num(PID.threshold.min,3)} / {num(PID.threshold.med,3)} / {num(PID.threshold.max,3)}</b></li>
        <li><span>Max gross</span><b>{num(PID.maxGross.min,3)} / {num(PID.maxGross.med,3)} / {num(PID.maxGross.max,3)}</b></li>
      </ul>
      <p class="hint">Shared axis; raw PID/control magnitudes. Caps tighten in stress and relax as conditions normalise.</p>
    </section>

    <!-- By-regime -->
    <section class="panel">
      <h2 class="h">By-Regime Performance</h2>
      <table class="table slim">
        <thead><tr><th>Regime</th><th>Ω</th><th>Hit rate</th><th>Days</th></tr></thead>
        <tbody>
          {REGIME.map(r => (
            <tr>
              <td>{r.name}</td>
              <td>{num(r.omega,2)}</td>
              <td>{pct(r.hit,1)}</td>
              <td>{r.days}</td>
            </tr>
          ))}
        </tbody>
      </table>
      <p class="mini">
        Long-only profile is pro-cyclical: strong in Bulls, steady in Neutral, destructive if unconstrained in Bears.
        The controller down-shifts exposure in stress to preserve capital and shorten recovery arcs.
      </p>
    </section>

    <!-- Risk & Pauses -->
    <section class="panel">
      <h2 class="h">Risk & Pauses</h2>
      <div class="grid2">
        <div class="stat"><div class="big">{pct(HEADLINE.pausePct,1)}</div><div class="cap">Paused share (all days)</div></div>
        <div>
          <ul class="kv tight">
            <li><span>Gross caps (min/med/max)</span><b>{num(PID.maxGross.min,2)} / {num(PID.maxGross.med,2)} / {num(PID.maxGross.max,2)}</b></li>
            <li><span>Thresholds (min/med/max)</span><b>{num(PID.threshold.min,3)} / {num(PID.threshold.med,3)} / {num(PID.threshold.max,3)}</b></li>
          </ul>
        </div>
      </div>
      <p class="mini">
        Pauses and tighter caps are the “seatbelt.” They reduce tail-risk during volatile or drawdown phases,
        trading a bit of upside for a cleaner equity path.
      </p>
    </section>

    <!-- Calibration -->
    <section class="panel">
      <h2 class="h">Calibration</h2>
      <ul class="kv tight">
        <li><span>ECE</span><b>0.1607</b></li>
        <li><span>Bins</span><b>10</b></li>
      </ul>
      <p class="mini">
        Bins around 0.60–0.85 are over-confident. Treat thresholds as dials; a dedicated calibration
        pass (e.g., isotonic) is planned for the next iteration.
      </p>
    </section>

    <!-- Sector impact -->
    <section class="panel">
      <h2 class="h">Sector Impact</h2>
      <div class="chips">
        {SECTORS_TOP.map(s => <span class="chip good">{s.sector} · Ω {num(s.omega,2)}</span>)}
      </div>
      <div class="chips">
        {SECTORS_BOTTOM.map(s => <span class="chip bad">{s.sector} · Ω {num(s.omega,2)}</span>)}
      </div>
      <p class="mini">
        Green chips show sectors where odds (Ω) lean positive; red chips highlight headwinds.
        The PID router can use this texture to tilt or to route toward safer policies in fragile groups.
      </p>
    </section>

    <!-- Ticker consistency -->
    <section class="panel">
      <h2 class="h">Ticker Consistency</h2>
      <ul class="kv">
        <li><span>Portfolio max win streak</span><b>{CONSISTENCY.portfolioMaxWin} d</b></li>
        <li><span>Portfolio max loss streak</span><b>{CONSISTENCY.portfolioMaxLoss} d</b></li>
        <li><span>Top ticker win streak</span><b>{CONSISTENCY.topTickerWin.ticker} · {CONSISTENCY.topTickerWin.days} d</b></li>
      </ul>
      <p class="mini">
        Streaks contextualise variability. Long win runs cluster in calm regimes; long loss runs often overlap bear stress.
        Controller caps and abstention dampen the worst streaks without muting resilience.
      </p>
    </section>

    <!-- Ops -->
    <section class="panel">
      <h2 class="h">Operations</h2>
      <table class="table slim">
        <tbody>
          <tr><td>Stage</td><td>dev</td></tr>
          <tr><td>Active</td><td>Yes</td></tr>
          <tr><td>Last update (UTC)</td><td>2025-09-19</td></tr>
          <tr><td>Artifacts</td><td>equity_25y.json, pid_policy_trace.json</td></tr>
          <tr><td>Hashes</td><td>—</td></tr>
        </tbody>
      </table>
      <p class="mini">Ops health looks normal; policy traces and equities render from local artifacts for reproducibility.</p>
    </section>

    <!-- Limits -->
    <section class="panel">
      <h2 class="h">Limitations</h2>
      <p class="mini">
        Research model; parameters subject to change. Backtest assumes fixed costs and a long-only book.
        Regime labeling uses simple hysteresis rules and may differ from alternative taxonomies.
      </p>
    </section>
  </div>

  <!-- Methodology / deep dives -->
  <section class="panel">
    <h2 class="h">Methodology (summary)</h2>
    <p class="mini">
      Selection via probability thresholding; sizes scale with surplus-over-threshold to a regime-aware gross cap.
      For deep dives, see the <a href="/pipelines/sim/">Workstation (Sim)</a> pages.
    </p>
  </section>

  <!-- Light client fetch to enrich: current regime + latest PID/sector/tickers if available -->
  <script type="module">
    const baseHref = () => (document.querySelector("base")?.getAttribute("href") || "/").replace(/\/+$/, "/");
    const url = (p) => (baseHref() + String(p).replace(/^\//,"")).replace(/([^:]\/)\/+/g,"$1");
    async function j(p){ try{ const r = await fetch(url(p), {cache:"no-cache"}); if(!r.ok) return null; return r.json(); }catch{ return null; } }
    const $ = (s)=>document.querySelector(s);

    // Current regime
    (async ()=>{
      const cur = await j("/data/models/eqx-m1/current_regime.json");
      if (cur){
        const label = cur.label ?? cur.regime ?? cur.name ?? "—";
        const p = cur.prob ?? cur.score ?? cur.confidence;
        const prob = (typeof p === "number") ? `${(p*100).toFixed(1)}%` : "—";
        const el = $("#current-reg"), sub = $("#current-reg-sub");
        if (el) el.textContent = label;
        if (sub) sub.textContent = `prob ${prob}`;
      }
    })();
  </script>

  <style>
    .intro{color:#444;margin:.35rem 0 1rem;max-width:78ch}
    .panel{background:#fff;border:1px solid var(--border);border-radius:12px;padding:1rem;margin:1rem 0;box-shadow:0 6px 18px rgba(0,0,0,.05)}
    .h{margin:.1rem 0 .6rem}
    .meta .row{display:flex;gap:1rem;flex-wrap:wrap}
    .meta .k{font-size:.8rem;color:#666}
    .meta .v{font-weight:700}
    .metrics{display:flex;gap:.75rem;flex-wrap:wrap}
    .m{border:1px solid var(--border);border-radius:12px;padding:.7rem .9rem;min-width:150px}
    .label{font-size:.8rem;color:#666;margin-bottom:.1rem}
    .val{font-weight:700}
    .subl{font-size:.8rem;color:#6b7280;margin-top:.15rem}

    .mosaic{display:grid;grid-template-columns:2fr 1fr;gap:1rem}
    @media(max-width:1100px){.mosaic{grid-template-columns:1fr}}
    .wide{grid-column:1 / span 2}
    .head{display:flex;align-items:center;justify-content:space-between;gap:1rem}
    .note{color:#6b7280;font-size:.85rem;margin-top:.5rem}

    .table{width:100%;border-collapse:separate;border-spacing:0 .4rem}
    .table th,.table td{padding:.35rem .5rem;border:1px solid var(--border)}
    .table.slim td,.table.slim th{font-size:.92rem}
    .table th{background:#fafafa;color:#374151;text-align:left}
    .table td:first-child,.table th:first-child{border-top-left-radius:8px;border-bottom-left-radius:8px}
    .table td:last-child,.table th:last-child{border-top-right-radius:8px;border-bottom-right-radius:8px}

    .kv{list-style:none;padding:0;margin:.25rem 0;display:grid;gap:.4rem}
    .kv li{display:flex;align-items:center;justify-content:space-between;border:1px solid var(--border);border-radius:10px;padding:.4rem .6rem}
    .kv.tight li{padding:.3rem .5rem}
    .hint{color:#6b7280;font-size:.8rem;margin-top:.5rem}

    .grid2{display:grid;grid-template-columns:1fr 1fr;gap:.75rem}
    @media(max-width:640px){.grid2{grid-template-columns:1fr}}
    .stat .big{font-weight:800;font-size:1.75rem;line-height:1}
    .stat .cap{color:#6b7280;margin-top:.15rem}

    .chips{display:flex;flex-wrap:wrap;gap:.5rem;margin:.25rem 0 .5rem}
    .chip{display:inline-block;border:1px solid var(--border);border-radius:999px;padding:.25rem .6rem;font-size:.92rem}
    .chip.good{background:#f0fdf4;border-color:#86efac}
    .chip.bad{background:#fef2f2;border-color:#fecaca}

    .mini{color:#4b5563;margin:.5rem 0 0}
  </style>
</BaseLayout>
