---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
const posts = (await getCollection("posts")).sort((a,b)=>a.data.date<b.data.date?1:-1);
export const prerender = true;
---
<BaseLayout title="Blog · EireQuant" description="Analyses, pipeline notes, and monthly reviews.">
  <!-- LEFT RAIL (optional simple nav) -->
  <Fragment slot="left">
    <section class="card">
      <h3 class="card-title">Browse</h3>
      <ul class="list">
        <li><a href="/blog/">All posts</a></li>
        <li><a href="/pipelines/live/">Live Pipeline</a></li>
        <li><a href="/models/eqx-m1/">EQX-M1 Model Card</a></li>
      </ul>
    </section>
  </Fragment>

  <!-- CENTER: FT-like vertical list -->
  <section class="card">
    <h1 class="h1">Blog</h1>
    <p class="muted">Professional yet readable summaries of research, pipeline notes, and reviews.</p>
  </section>

  <section class="list-wrap">
    {posts.map(p => (
      <a href={`/blog/${p.slug}/`} class="post">
        <h2 class="post-title">{p.data.title}</h2>
        <div class="post-meta">{p.data.date} · {(p.data.type ?? "").toUpperCase?.() || "POST"}</div>
        {p.data.summary && <p class="post-sum">{p.data.summary}</p>}
      </a>
    ))}
  </section>

  <!-- RIGHT RAIL: digestibles -->
  <Fragment slot="right">
    <section class="card">
      <h3 class="card-title">From the pipeline</h3>
      <ul class="list" id="digest"></ul>
      <div class="muted small"><a href="/pipelines/live/">Open Live Pipeline →</a></div>
    </section>
  </Fragment>

  <style>
    .card{ border:2px solid #d7d7d7; padding:16px; background:#fff; border-radius:6px; }
    .h1{ font-family: Georgia, 'Times New Roman', serif; margin:0 0 6px 0; }
    .muted{ color:#6b6b6b; }
    .small{ font-size:13px; }

    .list-wrap{ display:flex; flex-direction:column; gap:12px; }
    .post{
      display:block; text-decoration:none; color:inherit;
      border:2px solid #d7d7d7; border-radius:6px; background:#fff; padding:16px;
    }
    .post:hover{ box-shadow:0 2px 12px rgba(0,0,0,.06); }
    .post-title{ margin:0 0 4px 0; font-size:20px; font-weight:700; }
    .post-meta{ color:#555; font-size:14px; margin-bottom:6px; }
    .post-sum{ color:#333; }

    .list{ list-style:none; padding:0; margin:0; display:flex; flex-direction:column; gap:6px; }
  </style>

  <script type="module">
    const $ = (s)=>document.querySelector(s);
    const fmtPct = (x)=> (x==null? "—" : (Math.round(x*1000)/10).toFixed(1)+"%");
    async function j(path){ try{ const r = await fetch(path); if(!r.ok) return null; return await r.json(); }catch{ return null; } }

    (async () => {
      const latest = await j("/data/daily/latest.json");
      const date = latest?.date ?? "";
      const digest = $("#digest");

      // Top ticker by confidence (from ticker_leaderboard)
      const lb = await j("/data/models/eqx-m1/ticker_leaderboard.json");
      if (lb?.items?.length){
        const t = lb.items[0];
        const li = document.createElement("li");
        li.innerHTML = `<strong>Top ticker:</strong> ${t.ticker ?? "-"} <span class="muted">(${fmtPct(t.score ?? t.confidence ?? 0)})</span>`;
        digest.appendChild(li);
      }

      // Net delta (from daily greeks)
      if (date){
        const g = await j(`/data/daily/${date}/risk_greeks.json`);
        if (g){
          const li = document.createElement("li");
          li.innerHTML = `<strong>Net Δ:</strong> ${fmtPct(g.delta)}`;
          digest.appendChild(li);
        }
      }

      // Spotlight sector
      const sp = await j("/data/models/eqx-m1/sector_of_month.json");
      if (sp){
        const li = document.createElement("li");
        li.innerHTML = `<strong>Sector spotlight:</strong> ${sp.sector ?? "—"}`;
        digest.appendChild(li);
      }
    })();
  </script>
</BaseLayout>
